.container {
    flex-direction: row;
    margin-right: 1em;
}

.chatRoot {
    width: calc(100% - var(--sidebarWidth));
    overflow-y: auto;
    margin-left: calc(100px + var(--sidebarWidth));
    float: right;
    margin-top: 60px;
}

.chatContainer {
    flex: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    max-width: 100%;
}

.sidebar {
    padding-left: 1em;
    position: fixed;
    margin-top: 50px;
    height: 100%;
    padding-bottom: var(--spacingHorizontalM);
    width: var(--sidebarWidth);
}

/* Backdrop is hidden by default (desktop) and enabled on mobile via media query */
.sidebarBackdrop {
    display: none;
}

.chatEmptyState {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.chatEmptyStateTitle {
    font-size: 4rem;
    font-weight: 600;
    margin-top: 0;
    margin-bottom: 30px;
}

.chatEmptyStateSubtitle {
    font-weight: 600;
    margin: 1em;
    text-align: center;
}

.chatEmptyStateSubtitleMarkdown {
    font-weight: 600;
    margin: 1em;
    text-align: start;
}

@media (max-height: 780px) {
    .chatEmptyState {
        padding-top: 0;
    }

    .chatEmptyStateTitle {
        font-size: 3rem;
        margin-bottom: 0px;
    }
}

@media (max-width: 650px) {
    .chatContainer {
        max-width: 100%;
    }
    .chatRoot {
        flex-direction: column-reverse;
        align-items: center;
        max-width: 100%;
    }
    .container {
        margin-top: 0em;
        margin-right: 0em;
        margin-left: 0em;
    }

    /* Sidebar becomes a slide-in drawer overlay on mobile */
    .sidebar {
        position: fixed;
        top: 60px;
        left: 0;
        height: calc(100% - 60px);
        width: min(85vw, 360px);
        padding: 12px;
        z-index: 1001;
        background: var(--colorNeutralBackground1);
        border-right: 1px solid var(--colorNeutralStroke1);
        box-shadow: 0 2px 12px rgba(0, 0, 0, 0.2);
        transform: translateX(-100%);
        transition: transform 180ms ease-out;
        overscroll-behavior: contain;
        margin-top: 0; /* override desktop offset */
    }

    /* Keep the element in the DOM even if the hidden attribute is set,
       so we can animate the transform (avoid display:none jump) */
    .sidebar[hidden] {
        display: block !important;
    }

    /* Explicit open state for the drawer */
    .sidebarOpen {
        transform: translateX(0);
    }

    /* Dimmed backdrop behind the open drawer */
    .sidebarBackdrop {
        position: fixed;
        top: 60px;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.35);
        z-index: 1000;
        backdrop-filter: blur(2px);
        display: none; /* hidden by default on mobile */
    }

    /* Show backdrop only when drawer is open */
    .sidebar.sidebarOpen + .sidebarBackdrop {
        display: block;
    }

    .chatRoot {
        width: 100%;
        margin-left: 0px;
    }

    /* Use full width for messages and input on mobile */
    .allChatMessages {
        min-width: 100%;
        max-width: 100%;
    }

    .chatInput {
        max-width: 100%;
        min-width: 100%;
        padding-bottom: 70px;
    }
}

.chatMessageStream {
    display: flex;
    flex-direction: column;
    list-style: none;
}

.allChatMessages {
    overflow-y: auto;
    max-width: 100%;
    min-width: 80%;
}

.chatInput {
    position: sticky;
    margin-top: 60px;
    bottom: 10px;
    flex: 0 0 100px;
    padding-bottom: 60px;
    max-width: 90%;
    min-width: 50%;
}

.sidebarOpener {
    position: fixed;
    top: 60px;
    left: 10px;
    z-index: 1000;
    background-color: var(--colorNeutralBackground1Hover);
    border: 1px solid var(--colorNeutralStroke1);
    border-radius: 6px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    padding: 2px;
}

.sidebarOpener button {
    padding: 4px;
    border-radius: 3px;
    transition: background-color 0.2s ease;
    min-height: 24px;
    min-width: 24px;
    background-color: transparent;
}

.sidebarOpener button:hover {
    background-color: var(--colorNeutralBackground1Selected);
}
