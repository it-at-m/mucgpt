[project]
name = "mucgpt-core-service"
version = "1.2.5"
description = "a web interface for large language models for the public administration"
readme = "README.md"
requires-python= ">=3.10"
authors = [
    { name = "Michael Jaumann", email = "michael.jaumann@muenchen.de" },
    { name = "Paul Ilitz", email = "paul.ilitz@muenchen.de" },
]
maintainers = [
    { name = " ITM KICC", email = "itm.kicc@muenchen.de" },
    { name = "Michael Jaumann", email = "michael.jaumann@muenchen.de" },
    { name = "Paul Ilitz", email = "paul.ilitz@muenchen.de" },
]

dependencies = [
    "mistral-common==1.5.4",
    "fastapi[standard]==0.115.12",
    "langchain==0.3.25",
    "langchain-core==0.3.58",
    "langchain_community==0.3.23",
    "langchain-openai==0.3.16",
    "openai==1.77.0",
    "langsmith==0.3.42",
    "joserfc",
    "tiktoken",
    "pypdf==5.4.0",
    "uvicorn==0.34.2",
    "psycopg2-binary==2.9.10",
    "asgi-correlation-id==4.3.4",
    "gunicorn",
    "sqlalchemy==2.0.40",
    "gitpython==3.1.44",
]

[project.optional-dependencies]
test = [
    "pytest-env",
    "pytest",
    "pytest-asyncio",
    "pytest-snapshot",
    "pytest-mock",
    "coverage==7.8.0",
    "pytest-cov"
]

[tool.uv]
dev-dependencies = [
    "ipykernel==6.29.5",
    "pre-commit==4.2.0",
    "ruff==0.11.8",
]

[[tool.uv.index]]
name = "pypy"
url = "https://pypi.org/simple"

[tool.ruff]
target-version = "py38"
src = ["src"]

[tool.ruff.lint]
select = ["E", "F", "I", "UP"]
ignore = ["E501", "E701"] # line too long, multiple statements on one line

[tool.pytest.ini_options]
addopts = "-ra --cov"
pythonpath = ["src/"]
testpaths = [
    "tests"]
markers = [
    "integration: mark a test as a integration test",
    "unit: mark test as a unit test"
]
env = [
    "MUCGPT_CORE_LOG_CONFIG=src/logconf.yaml",
    "MUCGPT_CORE_FRONTEND_LABELS_ENV_NAME=MUCGPT",
    "MUCGPT_CORE_FRONTEND_ALTERNATIVE_LOGO=false",
    "MUCGPT_CORE_BACKEND_ENABLE_AUTH=false",
    "MUCGPT_CORE_BACKEND_ENABLE_DATABASE=false",
    "MUCGPT_CORE_BACKEND_UNAUTHORIZED_USER_REDIRECT_URL=NOT USED",
    "MUCGPT_CORE_BACKEND_SSO_ISSUER=NOT USED",
    "MUCGPT_CORE_BACKEND_SSO_ROLE=lhm-ab-mucgpt-user",
    "MUCGPT_CORE_BACKEND_DB_HOST=NOT USED",
    "MUCGPT_CORE_BACKEND_DB_NAME=NOT USED",
    "MUCGPT_CORE_BACKEND_DB_USER=NOT USED",
    "MUCGPT_CORE_BACKEND_DB_PASSWORD=NOT USED",
    "MUCGPT_CORE_BACKEND_CHAT_LOG_TOKENS=false",
    "MUCGPT_CORE_BACKEND_BRAINSTORM_LOG_TOKENS=false",
    "MUCGPT_CORE_BACKEND_SUM_LOG_TOKENS=false",
    "MUCGPT_CORE_BACKEND_SIMPLY_LOG_TOKENS=false",
    "MUCGPT_CORE_BACKEND_MODEL_1_TYPE=AZURE",
    "MUCGPT_CORE_BACKEND_MODEL_1_LLM_NAME=TEST_MODEL",
    "MUCGPT_CORE_BACKEND_MODEL_1_DEPLOYMENT=NOT USED",
    "MUCGPT_CORE_BACKEND_MODEL_1_ENDPOINT=https://myfakeendpoint.com",
    "MUCGPT_CORE_BACKEND_MODEL_1_API_KEY=NOT USED",
    "MUCGPT_CORE_BACKEND_MODEL_1_MAX_OUTPUT_TOKENS=128000",
    "MUCGPT_CORE_BACKEND_MODEL_1_MAX_INPUT_TOKENS=8192",
    "MUCGPT_CORE_BACKEND_MODEL_1_API_VERSION=NOT USED",
    "MUCGPT_CORE_BACKEND_MODEL_1_DESCRIPTION=NOT USED",
    "MUCGPT_CORE_VERSION=0.0",
    "MUCGPT_CORE_COMMIT=12012lf",
    "GIT_PYTHON_REFRESH=quiet"
]

[tool.coverage.paths]
source = ["scripts", "src"]

[tool.coverage.report]
show_missing = true
