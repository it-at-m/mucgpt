[project]
name = "MUCGPT"
version = "1.2.1"
description = "a web interface for large language models for the public administration"
readme = "README.md"
requires-python= ">=3.10"
authors = [
    { name = "Michael Jaumann", email = "michael.jaumann@muenchen.de" },
    { name = "Paul Ilitz", email = "paul.ilitz@muenchen.de" },
]
maintainers = [
    { name = " ITM KICC", email = "itm.kicc@muenchen.de" },
    { name = "Michael Jaumann", email = "michael.jaumann@muenchen.de" },
    { name = "Paul Ilitz", email = "paul.ilitz@muenchen.de" },
]

dependencies = [
    "mistral-common>=1.4.4",
    "fastapi[standard]>=0.115.4",
    "langchain>=0.3.7",
    "langchain-core>=0.3.15",
    "langchain_community>=0.3.5",
    "langchain-openai>=0.2.6",
    "openai>=1.54.3",
    "langsmith>=0.1.142",
    "joserfc",
    "tiktoken",
    "pypdf>=5.1.0",
    "uvicorn>=0.32.0",
    "psycopg2>=2.9.10",
    "asgi-correlation-id==4.3.4",
    "gunicorn",
    "sqlalchemy>=2.0.35",
]

[project.optional-dependencies]
dev = [
    "ruff==0.7.2",
    "pre-commit==4.0.1"
]
test = [
    "pytest-env",
    "pytest",
    "pytest-asyncio",
    "pytest-snapshot",
    "pytest-mock",
    "coverage>=7.6.4",
    "pytest-cov"
]

[tool.uv]
dev-dependencies = [
    "ipykernel>=6.29.5",
    "pre-commit>=4.0.1",
    "ruff>=0.7.0",
]

[[tool.uv.index]]
name = "pypy"
url = "https://pypi.org/simple"

[tool.ruff]
target-version = "py38"
src = ["app/backend"]

[tool.ruff.lint]
select = ["E", "F", "I", "UP"]
ignore = ["E501", "E701"] # line too long, multiple statements on one line

[tool.pytest.ini_options]
addopts = "-ra --cov"
pythonpath = ["app/backend"]
testpaths = [
    "tests"]
markers = [
    "integration: mark a test as a integration test",
    "unit: mark test as a unit test"
]
env = [
    "MUCGPT_CONFIG=tests/integration/test_config.json",
    "MUCGPT_BASE_CONFIG=tests/integration/base.json",
    "LOG_CONFIG=app/backend/logconf.yaml",
]

[tool.coverage.paths]
source = ["scripts", "app"]

[tool.coverage.report]
show_missing = true
