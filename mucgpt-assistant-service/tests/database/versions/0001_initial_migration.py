"""Initial migration

Revision ID: 0001
Revises:
Create Date: 2025-07-02 00:00:00.000000

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "0001"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Create owners table
    op.create_table(
        "owners",
        sa.Column("user_id", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("user_id"),
    )

    # Create assistants table
    op.create_table(
        "assistants",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("hierarchical_access", sa.JSON(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )

    # Create assistant_versions table
    op.create_table(
        "assistant_versions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("assistant_id", sa.String(), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("system_prompt", sa.String(), nullable=False),
        sa.Column("temperature", sa.Float(), nullable=False),
        sa.Column("max_output_tokens", sa.Integer(), nullable=False),
        sa.Column("examples", sa.JSON(), nullable=True),
        sa.Column("quick_prompts", sa.JSON(), nullable=True),
        sa.Column("tags", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["assistant_id"], ["assistants.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("assistant_id", "version", name="uq_assistant_version"),
    )

    # Create assistant_owners table (association table)
    op.create_table(
        "assistant_owners",
        sa.Column("assistant_id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["assistant_id"], ["assistants.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["owners.user_id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("assistant_id", "user_id"),
        sa.UniqueConstraint("assistant_id", "user_id", name="uq_assistant_owner"),
    )

    # Create assistant_tools table
    op.create_table(
        "assistant_tools",
        sa.Column("assistant_version_id", sa.Integer(), nullable=False),
        sa.Column("tool_id", sa.String(), nullable=False),
        sa.Column("config", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["assistant_version_id"], ["assistant_versions.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("assistant_version_id", "tool_id"),
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("assistant_tools")
    op.drop_table("assistant_owners")
    op.drop_table("assistant_versions")
    op.drop_table("assistants")
    op.drop_table("owners")
    # ### end Alembic commands ###
